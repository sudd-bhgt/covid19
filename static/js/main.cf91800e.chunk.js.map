{"version":3,"sources":["components/Counter.module.css","utils/common-function.js","components/Header.jsx","components/Counter.jsx","components/Table.jsx","components/Chart/BarChart.jsx","components/Footer.js","components/Home.jsx","App.js","serviceWorker.js","index.js","components/Table.module.css","components/Chart/BarChart.module.css"],"names":["module","exports","months","Header","data","Fragment","style","margin","fontFamily","fontSize","className","isNaN","Date","parse","unformattedDate","day","slice","month","year","time","formatDate","formatDateAbsolute","Banner","container","counter","confirm","confirm_name","h4","deltaConfirm","h1","active","active_name","recover","recover_name","deltaRecovered","recovered","deaths","deaths_name","deltaDeaths","Table","total","table","map","d","i","key","district","delta","confirmed","deceased","BarChart","console","log","labels","datasets","fillColor","backgroundColor","borderColor","options","title","display","text","legend","Footer","textAlign","padding","marginBottom","Home","state","districtData","stateLevel","lastUpdate","loading","axios","get","fetchData","length","this","setState","statewise","statecode","s","deltadeaths","deltarecovered","deltaconfirmed","lastupdatedtime","Counter","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf91800e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__19aGe\",\"h4\":\"Counter_h4__1_haY\",\"h1\":\"Counter_h1__2MOzv\",\"confirm\":\"Counter_confirm__2FJn5\",\"active\":\"Counter_active__1P5Pw\",\"recover\":\"Counter_recover__24Oy5\",\"deaths\":\"Counter_deaths__2UhdP\",\"confirm_name\":\"Counter_confirm_name__2AEV_\",\"active_name\":\"Counter_active_name__1vZRu\",\"recover_name\":\"Counter_recover_name__2zi7B\",\"deaths_name\":\"Counter_deaths_name__3djHH\"};","const months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n\n\n\n","import React from 'react';\nimport {\n    formatDate,\n  formatDateAbsolute\n} from '../utils/common-function';\n\nconst Header = ({data}) => {\n    return ( \n        <React.Fragment>\n            <div style={{margin: '25px auto 0', fontFamily: \"'Teko', sans-serif\", fontSize: '44px'}}>\n                <h1 className=\"text-info mb-0\">Covid19Bihar</h1>\n            </div>\n            <div className=\"text-warning\" style={{fontSize: '14px'}}>\n                <p className=\"m-0\">Last Update</p>\n                <span className=\"\">\n                {isNaN(Date.parse(formatDate(data)))\n                  ? ''\n                  : formatDateAbsolute(data)}\n                </span>\n            </div>\n        </React.Fragment>\n\n     );\n}\n \nexport default Header;","import React from \"react\";\nimport style from \"./Counter.module.css\";\n\nconst Banner = ({ data }) => {\n  //console.log(data);\n  return (\n    <div className={style.container}>\n      <div className={style.counter}>\n        <div className={style.confirm}>\n          <h5 className={style.confirm_name}>Confirmed</h5>\n          <h4 className={style.h4}>\n            [\n            {isNaN(data.deltaConfirm)\n              ? \"\"\n              : data.deltaConfirm > 0\n              ? \"+\" + data.deltaConfirm\n              : \"+0\"}\n            ]\n          </h4>\n          <h1 className={style.h1}>{data.confirm}</h1>\n        </div>\n      </div>\n\n      <div className={style.counter}>\n        <div className={style.active}>\n          <h5 className={style.active_name}>Active</h5>\n          <h4 className={style.h4}>&nbsp;</h4>\n          <h1 className={style.h1}>{data.active}</h1>\n        </div>\n      </div>\n\n      <div className={style.counter}>\n        <div className={style.recover}>\n          <h5 className={style.recover_name}>Recovered</h5>\n          <h4 className={style.h4}>\n            [\n            {isNaN(data.deltaRecovered)\n              ? \"\"\n              : data.deltaRecovered > 0\n              ? \"+\" + data.deltaRecovered\n              : \"+0\"}\n            ]\n          </h4>\n          <h1 className={style.h1}>{data.recovered}</h1>\n        </div>\n      </div>\n\n      <div className={style.counter}>\n        <div className={style.deaths}>\n          <h5 className={style.deaths_name}>Deaths</h5>\n          <h4 className={style.h4}>\n            [\n            {isNaN(data.deltaDeaths)\n              ? \"\"\n              : data.deltaDeaths > 0\n              ? \"+\" + data.deltaDeaths\n              : \"+0\"}\n            ]\n          </h4>\n          <h1 className={style.h1}>{data.deaths}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport style from \"./Table.module.css\";\n\nconst Table = ({ data, total }) => {\n  return (\n    <div className={style.table}>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th className=\"text-secondary\">District</th>\n            <th className=\"text-danger\">confirmed</th>\n            <th className=\"text-primary\">Active</th>\n            <th className=\"text-success\">Rcvrd</th>\n            <th className=\"text-secondary\">Deaths</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((d, i) => (\n            <tr key={i}>\n              <td>{d.district}</td>\n              <td>\n                {d.delta.confirmed > 0 ? (\n                  <span className=\"badge badge-sm badge-success badge-pill mr-1\">\n                    {`+${d.delta.confirmed}`}\n                  </span>\n                ) : (\n                  \" \"\n                )}{\" \"}\n                {d.confirmed > 0 ? d.confirmed : \"-\"}\n              </td>\n              <td>{d.active > 0 ? d.active : \"-\"}</td>\n              <td>\n                {d.delta.recovered > 0 ? (\n                  <span className=\"badge badge-sm badge-danger badge-pill mr-1\">{`+${d.delta.recovered}`}</span>\n                ) : (\n                  \"\"\n                )}\n                {d.recovered > 0 ? d.recovered : \"-\"}\n              </td>\n              <td>{d.deceased > 0 ? d.deceased : \"-\"}</td>\n            </tr>\n          ))}\n          <tr>\n            <th className=\"text-secondary\">Total</th>\n            <th className=\"text-danger\">{total.confirm}</th>\n            <th className=\"text-primary\">{total.active}</th>\n            <th className=\"text-success\">{total.recovered}</th>\n            <th className=\"text-secondary\">{total.deaths}</th>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport style from \"./BarChart.module.css\";\n\nconst BarChart = ({ data: { confirm, active, deaths, recovered } }) => {\n  console.log(confirm);\n\n  const data = {\n    labels: [\"Confirmed\", \"Active\", \"Recovered\", \"Deaths\"],\n    datasets: [\n      {\n        fillColor: [\"red\", \"blue\", \"orange\", \"red\"],\n        backgroundColor: [\"#ff073a\", \"#007bff\", \"#28a745\", \"#6c757d\"],\n        borderColor: \"rgba(0,0,0, 1)\",\n        data: [confirm, active, recovered, deaths],\n      },\n    ],\n  };\n\n  return (\n    <div className=\"conatiner my-5\">\n      <div className={style.container}>\n        <Bar\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: \"Current status in Bihar\",\n              fontSize: 20,\n            },\n            legend: {\n              display: false,\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: 5,\n        marginBottom: '12px',\n        fontFamily: \" 'Sacramento', cursive\",\n        fontSize: '24px'\n      }}\n    >\n      <p className=\"mb-0\">Develop By</p>\n      Abhishek Raj Ravi\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Header from './Header';\nimport Counter from \"./Counter\";\nimport Table from \"./Table\";\nimport BarChart from './Chart/BarChart';\nimport Footer from './Footer';\n\nclass Home extends Component {\n  state = {\n    /*\n    district: {\n      confirm: \"\",\n      active: \"\",\n      deaths: \"\",\n      recovered: \"\",\n    },\n    delta: {\n      confirm: \"\",\n      deaths: \"\",\n      recovered: \"\",\n    },\n*/\n    districtData: [],\n    stateLevel: {\n      active: 0,\n      confirm: 0,\n      deaths: 0,\n      recovered: 0,\n      deltaDeaths: 0,\n      deltaRecovered: 0,\n      deltaConfirm: 0,\n      lastUpdate: '',\n    },\n    loading: true\n  };\n\n  async componentDidMount() {\n    const fetchData = await axios.get(\n      \"https://api.covid19india.org/v2/state_district_wise.json\"\n    );\n\n    let data = [];\n    for (let i = 0; i < fetchData.data.length; i++) {\n      if (fetchData.data[i].state === \"Bihar\")\n        data = fetchData.data[i].districtData;\n    }\n\n    /*\n    data.map((data) => {\n      return this.setState({\n        district: {\n          name: data.district,\n          confirm: data.confirmed,\n          active: data.active,\n          deaths: data.deceased,\n          recovered: data.recovered,\n        },\n        delta: {\n          confirm: data.delta.confirmed,\n          deaths: data.delta.deceased,\n          recovered: data.delta.recovered,\n        },\n      });\n    });*/\n\n    this.setState({ districtData: data });\n\n    // Counter State Level\n    const stateTotal = await axios.get(\n      \"https://api.covid19india.org/data.json\"\n    );\n\n    stateTotal.data.statewise.map((data) => {\n      if (data.state === \"Bihar\" || data.statecode === \"BR\") {\n        return this.setState((s) => ({\n          stateLevel: {\n            active: data.active,\n            confirm: data.confirmed,\n            deaths: data.deaths,\n            recovered: data.recovered,\n            deltaDeaths: data.deltadeaths,\n            deltaRecovered: data.deltarecovered,\n            deltaConfirm: data.deltaconfirmed,\n            lastUpdate: data.lastupdatedtime,\n          },\n        }));\n      }\n    });\n\n    this.setState({loading: false})\n  }\n\n  render() {\n   // console.log(this.state.stateLevel.lastUpdate)\n    if(this.state.loading) {\n      return <p>Loading...</p>\n    } else\n    return (\n      <React.Fragment>\n        <Header data={this.state.stateLevel.lastUpdate}/>\n        <Counter data={this.state.stateLevel} />\n        <Table data={this.state.districtData} total={this.state.stateLevel} />\n        <BarChart data={this.state.stateLevel} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3M_gK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarChart_container__2Tc0Y\"};"],"sourceRoot":""}